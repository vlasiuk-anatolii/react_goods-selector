{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","selectGood","good","setState","removeGood","selectedGoods","index","indexOf","splice","clearGoods","getText","length","arr","join","partWithoutLast","slice","this","className","type","onClick","map","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAe,CACbC,aAAc,CAAC,QAFnB,EAKEC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,aAAa,GAAD,mBAAMD,EAAMC,cAAZ,CAA0BE,SAP5C,EAWEE,WAAa,SAACF,GACZ,EAAKC,UAAS,SAACJ,GACb,IAAMM,EAAgBN,EAAMC,aACtBM,EAAQD,EAAcE,QAAQL,GAIpC,OAFAG,EAAcG,OAAOF,EAAO,GAErB,CAAEN,aAAcK,OAlB7B,EAsBEI,WAAa,WACX,EAAKN,SAAS,CAAEH,aAAc,MAvBlC,EA0BEU,QAAU,SAACC,EAAgBC,GACzB,GAAe,IAAXD,EACF,MAAM,oBAAN,OAA2BC,EAAI,GAA/B,gBAGF,GAAe,IAAXD,EACF,MAAM,oBAAN,OAA2BC,EAAIC,KAAK,SAApC,iBAGF,GAAIF,EAAS,EAAG,CACd,IAAMG,EAAkBF,EAAIG,MAAM,EAAGH,EAAID,OAAS,GAElD,MAAM,oBAAN,OAA2BG,EAAgBD,KAAK,MAAhD,gBAA6DD,EAAIA,EAAID,OAAS,GAA9E,iBAGF,MAAO,sCAzCX,4CA4CE,WAAU,IAAD,OACCX,EAAiBgB,KAAKjB,MAAtBC,aAER,OACE,mCACE,sBAAKiB,UAAU,sBAAf,UACE,qBAAKA,UAAU,0BAAf,SACGD,KAAKN,QAAQV,EAAaW,OAAQX,KAErC,qBAAKiB,UAAU,eAAf,SACGjB,GACC,wBACEkB,KAAK,SACLC,QAAS,kBAAM,EAAKV,cACpBQ,UAAmC,IAAxBjB,EAAaW,OACpB,yCACA,+BALN,qBAYJ,oBAAIM,UAAU,mBAAd,SACGpB,EAAgBuB,KAAI,SAAClB,GACpB,OACE,qBAAKe,UAAU,MAAf,SACE,+BACE,sBAAMA,UAAU,aAAhB,SAA8Bf,IAC7B,IACD,wBACEe,UAAWjB,EAAaqB,SAASnB,GAC7B,wCACA,yCACJgB,KAAK,SACLC,QAAS,WACP,OAAInB,EAAaqB,SAASnB,GACjB,EAAKE,WAAWF,GAGlB,EAAKD,WAAWC,IAV3B,SAaE,sBAAMe,UAAU,aAAhB,SACGjB,EAAaqB,SAASnB,GACnB,SACA,eAnBDA,mBAvE3B,GAAyBoB,IAAMC,WCjB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8de10acd.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport interface State {\n  selectedGood: string[];\n}\n\nexport class App extends React.Component <{}, State> {\n  state: State = {\n    selectedGood: ['Jam'],\n  };\n\n  selectGood = (good: string) => {\n    this.setState((state) => ({\n      selectedGood: [...state.selectedGood, good],\n    }));\n  };\n\n  removeGood = (good: string) => {\n    this.setState((state) => {\n      const selectedGoods = state.selectedGood;\n      const index = selectedGoods.indexOf(good);\n\n      selectedGoods.splice(index, 1);\n\n      return { selectedGood: selectedGoods };\n    });\n  };\n\n  clearGoods = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  getText = (length: number, arr: string[]) => {\n    if (length === 1) {\n      return `Selected goods - ${arr[0]} is selected`;\n    }\n\n    if (length === 2) {\n      return `Selected goods - ${arr.join(' and ')} are selected`;\n    }\n\n    if (length > 2) {\n      const partWithoutLast = arr.slice(0, arr.length - 1);\n\n      return `Selected goods - ${partWithoutLast.join(', ')} and ${arr[arr.length - 1]} are selected`;\n    }\n\n    return 'Selected goods - No goods selected';\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <>\n        <div className=\"App select is-small\">\n          <div className=\"notification title is-5\">\n            {this.getText(selectedGood.length, selectedGood)}\n          </div>\n          <div className=\"notification\">\n            {selectedGood && (\n              <button\n                type=\"button\"\n                onClick={() => this.clearGoods()}\n                className={selectedGood.length === 0\n                  ? 'button is-primary title is-5 is-hidden'\n                  : 'button is-primary title is-5'}\n              >\n                Clear\n              </button>\n            )}\n          </div>\n\n          <ul className=\"box notification\">\n            {goodsFromServer.map((good) => {\n              return (\n                <div className=\"box\">\n                  <li key={good}>\n                    <span className=\"title is-5\">{good}</span>\n                    {' '}\n                    <button\n                      className={selectedGood.includes(good)\n                        ? 'button is-danger ml-5 is-pulled-right'\n                        : 'button is-primary ml-5 is-pulled-right'}\n                      type=\"button\"\n                      onClick={() => {\n                        if (selectedGood.includes(good)) {\n                          return this.removeGood(good);\n                        }\n\n                        return this.selectGood(good);\n                      }}\n                    >\n                      <span className=\"title is-5\">\n                        {selectedGood.includes(good)\n                          ? 'Remove'\n                          : 'Select'}\n                      </span>\n                    </button>\n                  </li>\n                </div>\n              );\n            })}\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
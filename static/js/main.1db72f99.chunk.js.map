{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","map","item","index","id","good","App","state","selectedGood","selectGood","setState","removeGood","selectedGoods","indexOf","splice","clearGoods","getText","length","arr","join","partWithoutLast","slice","this","className","type","onClick","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAgBMA,EAba,CACjB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGiCC,KAAI,SAACC,EAAMC,GAAP,MAAkB,CACvDC,GAAID,EAAQ,EACZE,KAAK,GAAD,OAAKH,OASEI,EAAb,4MACEC,MAAe,CACbC,aAAc,CAAC,QAFnB,EAKEC,WAAa,SAACJ,GACZ,EAAKK,UAAS,SAACH,GAAD,MAAY,CACxBC,aAAa,GAAD,mBAAMD,EAAMC,cAAZ,CAA0BH,SAP5C,EAWEM,WAAa,SAACN,GACZ,EAAKK,UAAS,SAACH,GACb,IAAMK,EAAgBL,EAAMC,aACtBL,EAAQS,EAAcC,QAAQR,GAIpC,OAFAO,EAAcE,OAAOX,EAAO,GAErB,CAAEK,aAAcI,OAlB7B,EAsBEG,WAAa,WACX,EAAKL,SAAS,CAAEF,aAAc,MAvBlC,EA0BEQ,QAAU,SAACC,EAAgBC,GACzB,GAAe,IAAXD,EACF,MAAM,oBAAN,OAA2BC,EAAI,GAA/B,gBAGF,GAAe,IAAXD,EACF,MAAM,oBAAN,OAA2BC,EAAIC,KAAK,SAApC,iBAGF,GAAIF,EAAS,EAAG,CACd,IAAMG,EAAkBF,EAAIG,MAAM,EAAGH,EAAID,OAAS,GAElD,MAAM,oBAAN,OAA2BG,EAAgBD,KAAK,MAAhD,gBAA6DD,EAAIA,EAAID,OAAS,GAA9E,iBAGF,MAAO,sCAzCX,4CA4CE,WAAU,IAAD,OACCT,EAAiBc,KAAKf,MAAtBC,aAER,OACE,mCACE,sBAAKe,UAAU,sBAAf,UACE,qBAAKA,UAAU,0BAAf,SACGD,KAAKN,QAAQR,EAAaS,OAAQT,KAErC,qBAAKe,UAAU,eAAf,SACGf,GACC,wBACEgB,KAAK,SACLC,QAAS,kBAAM,EAAKV,cACpBQ,UAAmC,IAAxBf,EAAaS,OACpB,yCACA,+BALN,qBAYJ,oBAAIM,UAAU,mBAAd,SACGvB,EAAgBC,KAAI,SAACC,GACpB,OACE,qBAAIqB,UAAU,MAAd,UACE,sBAAMA,UAAU,aAAhB,SAA8BrB,EAAKG,OAClC,IACD,wBACEkB,UAAWf,EAAakB,SAASxB,EAAKG,MAClC,wCACA,yCACJmB,KAAK,SACLC,QAAS,WACP,OAAIjB,EAAakB,SAASxB,EAAKG,MACtB,EAAKM,WAAWT,EAAKG,MAGvB,EAAKI,WAAWP,EAAKG,OAVhC,SAaE,sBAAMkB,UAAU,aAAhB,SACGf,EAAakB,SAASxB,EAAKG,MACxB,SACA,eAnBeH,EAAKE,kBAtE9C,GAAyBuB,IAAMC,WCxB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1db72f99.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsArray = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst goodsFromServer = goodsArray.map((item, index) => ({\n  id: index + 1,\n  good: `${item}`,\n}));\n\n// console.log(goodsFromServer);\n\nexport interface State {\n  selectedGood: string[];\n}\n\nexport class App extends React.Component <{}, State> {\n  state: State = {\n    selectedGood: ['Jam'],\n  };\n\n  selectGood = (good: string) => {\n    this.setState((state) => ({\n      selectedGood: [...state.selectedGood, good],\n    }));\n  };\n\n  removeGood = (good: string) => {\n    this.setState((state) => {\n      const selectedGoods = state.selectedGood;\n      const index = selectedGoods.indexOf(good);\n\n      selectedGoods.splice(index, 1);\n\n      return { selectedGood: selectedGoods };\n    });\n  };\n\n  clearGoods = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  getText = (length: number, arr: string[]) => {\n    if (length === 1) {\n      return `Selected goods - ${arr[0]} is selected`;\n    }\n\n    if (length === 2) {\n      return `Selected goods - ${arr.join(' and ')} are selected`;\n    }\n\n    if (length > 2) {\n      const partWithoutLast = arr.slice(0, arr.length - 1);\n\n      return `Selected goods - ${partWithoutLast.join(', ')} and ${arr[arr.length - 1]} are selected`;\n    }\n\n    return 'Selected goods - No goods selected';\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <>\n        <div className=\"App select is-small\">\n          <div className=\"notification title is-5\">\n            {this.getText(selectedGood.length, selectedGood)}\n          </div>\n          <div className=\"notification\">\n            {selectedGood && (\n              <button\n                type=\"button\"\n                onClick={() => this.clearGoods()}\n                className={selectedGood.length === 0\n                  ? 'button is-primary title is-5 is-hidden'\n                  : 'button is-primary title is-5'}\n              >\n                Clear\n              </button>\n            )}\n          </div>\n\n          <ul className=\"box notification\">\n            {goodsFromServer.map((item) => {\n              return (\n                <li className=\"box\" key={item.id}>\n                  <span className=\"title is-5\">{item.good}</span>\n                  {' '}\n                  <button\n                    className={selectedGood.includes(item.good)\n                      ? 'button is-danger ml-5 is-pulled-right'\n                      : 'button is-primary ml-5 is-pulled-right'}\n                    type=\"button\"\n                    onClick={() => {\n                      if (selectedGood.includes(item.good)) {\n                        return this.removeGood(item.good);\n                      }\n\n                      return this.selectGood(item.good);\n                    }}\n                  >\n                    <span className=\"title is-5\">\n                      {selectedGood.includes(item.good)\n                        ? 'Remove'\n                        : 'Select'}\n                    </span>\n                  </button>\n                </li>\n\n              );\n            })}\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}